{
  "tables": {
    "Events": {
      "Condition": "CreateEventsTable",
      "Type": "AWS::DynamoDB::Table",
      "Description": "immutable table of events",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "id",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "id",
            "KeyType": "HASH"
          }
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 5,
          "WriteCapacityUnits": 5
        },
        "PointInTimeRecoverySpecification": {
          "PointInTimeRecoveryEnabled": true
        }
      }
    },
    "Bucket0": {
      "Condition": "CreateBucket0Table",
      "Type": "AWS::DynamoDB::Table",
      "Description": "table that stores resources of all data models",
      "Properties": {
        "PointInTimeRecoverySpecification": {
          "PointInTimeRecoveryEnabled": true
        },
        "AttributeDefinitions": [
          {
            "AttributeName": "__h__",
            "AttributeType": "S"
          },
          {
            "AttributeName": "__r__",
            "AttributeType": "S"
          },
          {
            "AttributeName": "__x0h__",
            "AttributeType": "S"
          },
          {
            "AttributeName": "__x0r__",
            "AttributeType": "S"
          },
          {
            "AttributeName": "__x1h__",
            "AttributeType": "S"
          },
          {
            "AttributeName": "__x1r__",
            "AttributeType": "S"
          },
          {
            "AttributeName": "__x2h__",
            "AttributeType": "S"
          },
          {
            "AttributeName": "__x2r__",
            "AttributeType": "S"
          },
          {
            "AttributeName": "__x3h__",
            "AttributeType": "S"
          },
          {
            "AttributeName": "__x3r__",
            "AttributeType": "S"
          },
          {
            "AttributeName": "__x4h__",
            "AttributeType": "S"
          },
          {
            "AttributeName": "__x4r__",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "__h__",
            "KeyType": "HASH"
          },
          {
            "AttributeName": "__r__",
            "KeyType": "RANGE"
          }
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 10,
          "WriteCapacityUnits": 10
        },
        "StreamSpecification": {
          "StreamViewType": "NEW_AND_OLD_IMAGES"
        },
        "GlobalSecondaryIndexes": [
          {
            "IndexName": "idx0",
            "KeySchema": [
              {
                "AttributeName": "__x0h__",
                "KeyType": "HASH"
              },
              {
                "AttributeName": "__x0r__",
                "KeyType": "RANGE"
              }
            ],
            "Projection": {
              "ProjectionType": "KEYS_ONLY"
            },
            "ProvisionedThroughput": {
              "ReadCapacityUnits": 10,
              "WriteCapacityUnits": 10
            }
          },
          {
            "IndexName": "idx1",
            "KeySchema": [
              {
                "AttributeName": "__x1h__",
                "KeyType": "HASH"
              },
              {
                "AttributeName": "__x1r__",
                "KeyType": "RANGE"
              }
            ],
            "Projection": {
              "ProjectionType": "KEYS_ONLY"
            },
            "ProvisionedThroughput": {
              "ReadCapacityUnits": 10,
              "WriteCapacityUnits": 10
            }
          },
          {
            "IndexName": "idx2",
            "KeySchema": [
              {
                "AttributeName": "__x2h__",
                "KeyType": "HASH"
              },
              {
                "AttributeName": "__x2r__",
                "KeyType": "RANGE"
              }
            ],
            "Projection": {
              "ProjectionType": "KEYS_ONLY"
            },
            "ProvisionedThroughput": {
              "ReadCapacityUnits": 10,
              "WriteCapacityUnits": 10
            }
          },
          {
            "IndexName": "idx3",
            "KeySchema": [
              {
                "AttributeName": "__x3h__",
                "KeyType": "HASH"
              },
              {
                "AttributeName": "__x3r__",
                "KeyType": "RANGE"
              }
            ],
            "Projection": {
              "ProjectionType": "KEYS_ONLY"
            },
            "ProvisionedThroughput": {
              "ReadCapacityUnits": 10,
              "WriteCapacityUnits": 10
            }
          },
          {
            "IndexName": "idx4",
            "KeySchema": [
              {
                "AttributeName": "__x4h__",
                "KeyType": "HASH"
              },
              {
                "AttributeName": "__x4r__",
                "KeyType": "RANGE"
              }
            ],
            "Projection": {
              "ProjectionType": "KEYS_ONLY"
            },
            "ProvisionedThroughput": {
              "ReadCapacityUnits": 10,
              "WriteCapacityUnits": 10
            }
          }
        ]
      }
    }
  },
  "buckets": {
    "Objects": {
      "Condition": "CreateObjectsBucket",
      "Type": "AWS::S3::Bucket",
      "Description": "content-addressed storage for all objects"
    },
    "Secrets": {
      "Condition": "CreateSecretsBucket",
      "Type": "AWS::S3::Bucket",
      "Description": "stuff",
      "Properties": {
        "VersioningConfiguration": {
          "Status": "Enabled"
        }
      }
    },
    "PrivateConf": {
      "Type": "AWS::S3::Bucket",
      "Condition": "CreatePrivateConfBucket",
      "Description": "private configuration files",
      "Properties": {
        "VersioningConfiguration": {
          "Status": "Enabled"
        }
      }
    },
    "FileUpload": {
      "Type": "AWS::S3::Bucket",
      "Condition": "CreateFileUploadBucket",
      "Description": "file upload destination for all users",
      "Properties": {
        "CorsConfiguration": {
          "CorsRules": [
            {
              "AllowedMethods": [
                "GET",
                "PUT",
                "POST"
              ],
              "AllowedOrigins": [
                "*"
              ],
              "AllowedHeaders": [
                "*"
              ],
              "MaxAge": 3600
            }
          ]
        }
      }
    },
    "Logs": {
      "Type": "AWS::S3::Bucket",
      "Description": "logs from lambda functions, apigateway and others",
      "Properties": {
        "LifecycleConfiguration": {
          "Rules": [
            {
              "Id": "TransitionLogsToGlacier",
              "Prefix": "glacier",
              "Status": "Enabled",
              "Transitions": [
                {
                  "TransitionInDays": {
                    "Ref": "LogsDaysBeforeTransitionToGlacier"
                  },
                  "StorageClass": "Glacier"
                }
              ]
            }
          ]
        }
      }
    },
    "Deployment": {
      "Type": "AWS::S3::Bucket",
      "Description": "deployment storage bucket"
    }
  },
  "iam": {
    "FileUploadBucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "FileUploadBucket"
        },
        "PolicyDocument": {
          "Id": "FileUploadBucketPolicy",
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "PutAccess",
              "Action": [
                "s3:PutObject"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:s3:::",
                    {
                      "Ref": "FileUploadBucket"
                    },
                    "/",
                    "${aws:userid}",
                    "/*"
                  ]
                ]
              },
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": "IotClientRole.Arn"
                }
              }
            }
          ]
        }
      }
    },
    "IotClientRole": {
      "Type": "AWS::IAM::Role",
      "Description": "role assumed by every connecting client",
      "Properties": {
        "RoleName": {
          "Fn::Sub": "${Namespace}-iotClientRole"
        },
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ],
                "AWS": [
                  {
                    "Fn::Sub": "arn:aws:iam::${AWS::AccountId}:root"
                  }
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Sub": "${Namespace}-${AWS::Region}-iotClientRolePolicy"
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Resource": "arn:aws:logs:::log-group:/aws/lambda/*:*:*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "iot:Connect"
                  ],
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        {
                          "Fn::Sub": "arn:aws:iot:${AWS::Region}:${AWS::AccountId}:client/"
                        },
                        "${iot:ClientId}"
                      ]
                    ]
                  }
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "iot:Publish"
                  ],
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        {
                          "Fn::Sub": "arn:aws:iot:${AWS::Region}:${AWS::AccountId}:topic/${IotParentTopic}/"
                        },
                        "${iot:ClientId}/sub/*"
                      ]
                    ]
                  }
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "iot:Subscribe"
                  ],
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        {
                          "Fn::Sub": "arn:aws:iot:${AWS::Region}:${AWS::AccountId}:topicfilter/${IotParentTopic}/"
                        },
                        "${iot:ClientId}/sub/*"
                      ]
                    ]
                  }
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "iot:Receive"
                  ],
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        {
                          "Fn::Sub": "arn:aws:iot:${AWS::Region}:${AWS::AccountId}:topic/${IotParentTopic}/"
                        },
                        "${iot:ClientId}/sub/*"
                      ]
                    ]
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "AutoScalingDynamoDBRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "application-autoscaling.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyName": {
              "Fn::Sub": "${Namespace}-${AWS::Region}-AutoScalingDynamoDBPolicy"
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "dynamodb:DescribeTable",
                    "dynamodb:UpdateTable"
                  ],
                  "Resource": {
                    "Fn::Sub": "arn:aws:dynamodb:${AWS::Region}:*:table/${Namespace}*"
                  }
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "cloudwatch:DescribeAlarms",
                    "cloudwatch:PutMetricAlarm",
                    "cloudwatch:DeleteAlarms"
                  ],
                  "Resource": "*"
                }
              ]
            }
          }
        ]
      }
    }
  },
  "autoscaleEvents": {
    "AutoScalingTargetWrite": {
      "Type": "AWS::ApplicationAutoScaling::ScalableTarget",
      "Properties": {
        "MaxCapacity": {
          "Ref": "MaxWrite"
        },
        "MinCapacity": {
          "Ref": "MinWrite"
        },
        "ResourceId": {
          "Fn::Join": [
            "",
            [
              "table/",
              {
                "Ref": "Table"
              }
            ]
          ]
        },
        "RoleARN": {
          "Ref": "AutoScalingDynamoDBRole"
        },
        "ScalableDimension": "dynamodb:table:WriteCapacityUnits",
        "ServiceNamespace": "dynamodb"
      }
    },
    "ScalingPolicyWrite": {
      "Type": "AWS::ApplicationAutoScaling::ScalingPolicy",
      "DependsOn": [
        "AutoScalingTargetWrite"
      ],
      "Properties": {
        "PolicyName": "ScalingPolicyWrite",
        "PolicyType": "TargetTrackingScaling",
        "ScalingTargetId": {
          "Ref": "AutoScalingTargetWrite"
        },
        "TargetTrackingScalingPolicyConfiguration": {
          "PredefinedMetricSpecification": {
            "PredefinedMetricType": "DynamoDBWriteCapacityUtilization"
          },
          "ScaleInCooldown": {
            "Ref": "ScaleInCooldown"
          },
          "ScaleOutCooldown": {
            "Ref": "ScaleOutCooldown"
          },
          "TargetValue": "TargetWriteUtilization"
        }
      }
    }
  },
  "autoscaleBucket0": {
    "AutoScalingTargetRead": {
      "Type": "AWS::ApplicationAutoScaling::ScalableTarget",
      "Properties": {
        "MaxCapacity": {
          "Ref": "MaxRead"
        },
        "MinCapacity": {
          "Ref": "MinRead"
        },
        "ResourceId": {
          "Fn::Join": [
            "",
            [
              "table/",
              {
                "Ref": "Table"
              }
            ]
          ]
        },
        "RoleARN": {
          "Ref": "AutoScalingDynamoDBRole"
        },
        "ScalableDimension": "dynamodb:table:ReadCapacityUnits",
        "ServiceNamespace": "dynamodb"
      }
    },
    "TableScalingPolicyRead": {
      "Type": "AWS::ApplicationAutoScaling::ScalingPolicy",
      "DependsOn": [
        "AutoScalingTargetRead"
      ],
      "Properties": {
        "PolicyName": "TableScalingPolicyRead",
        "PolicyType": "TargetTrackingScaling",
        "ScalingTargetId": {
          "Ref": "AutoScalingTargetRead"
        },
        "TargetTrackingScalingPolicyConfiguration": {
          "PredefinedMetricSpecification": {
            "PredefinedMetricType": "DynamoDBReadCapacityUtilization"
          },
          "ScaleInCooldown": {
            "Ref": "ScaleInCooldown"
          },
          "ScaleOutCooldown": {
            "Ref": "ScaleOutCooldown"
          },
          "TargetValue": {
            "Ref": "TargetReadUtilization"
          }
        }
      }
    },
    "AutoScalingTargetWrite": {
      "Type": "AWS::ApplicationAutoScaling::ScalableTarget",
      "Properties": {
        "MaxCapacity": {
          "Ref": "MaxWrite"
        },
        "MinCapacity": {
          "Ref": "MinWrite"
        },
        "ResourceId": {
          "Fn::Join": [
            "",
            [
              "table/",
              {
                "Ref": "Table"
              }
            ]
          ]
        },
        "RoleARN": {
          "Ref": "AutoScalingDynamoDBRole"
        },
        "ScalableDimension": "dynamodb:table:WriteCapacityUnits",
        "ServiceNamespace": "dynamodb"
      }
    },
    "TableScalingPolicyWrite": {
      "Type": "AWS::ApplicationAutoScaling::ScalingPolicy",
      "DependsOn": [
        "AutoScalingTargetWrite"
      ],
      "Properties": {
        "PolicyName": "TableScalingPolicyWrite",
        "PolicyType": "TargetTrackingScaling",
        "ScalingTargetId": {
          "Ref": "AutoScalingTargetWrite"
        },
        "TargetTrackingScalingPolicyConfiguration": {
          "PredefinedMetricSpecification": {
            "PredefinedMetricType": "DynamoDBWriteCapacityUtilization"
          },
          "ScaleInCooldown": {
            "Ref": "ScaleInCooldown"
          },
          "ScaleOutCooldown": {
            "Ref": "ScaleOutCooldown"
          },
          "TargetValue": {
            "Ref": "TargetWriteUtilization"
          }
        }
      }
    },
    "TableScalingPolicyReadIdx0": {
      "Type": "AWS::ApplicationAutoScaling::ScalingPolicy",
      "DependsOn": [
        "AutoScalingTargetReadIdx0",
        "TableScalingPolicyRead",
        "AutoScalingTargetRead",
        "TableScalingPolicyWrite",
        "AutoScalingTargetWrite"
      ],
      "Properties": {
        "PolicyName": "TableScalingPolicyReadIdx0",
        "PolicyType": "TargetTrackingScaling",
        "ScalingTargetId": {
          "Ref": "AutoScalingTargetReadIdx0"
        },
        "TargetTrackingScalingPolicyConfiguration": {
          "PredefinedMetricSpecification": {
            "PredefinedMetricType": "DynamoDBReadCapacityUtilization"
          },
          "ScaleInCooldown": {
            "Ref": "ScaleInCooldown"
          },
          "ScaleOutCooldown": {
            "Ref": "ScaleOutCooldown"
          },
          "TargetValue": {
            "Ref": "TargetReadUtilization"
          }
        }
      }
    },
    "AutoScalingTargetReadIdx0": {
      "Type": "AWS::ApplicationAutoScaling::ScalableTarget",
      "DependsOn": [
        "TableScalingPolicyRead",
        "AutoScalingTargetRead",
        "TableScalingPolicyWrite",
        "AutoScalingTargetWrite"
      ],
      "Properties": {
        "MaxCapacity": {
          "Ref": "MaxRead"
        },
        "MinCapacity": {
          "Ref": "MinRead"
        },
        "ResourceId": {
          "Fn::Join": [
            "",
            [
              "table/",
              {
                "Ref": "Table"
              },
              "/index/",
              "idx0"
            ]
          ]
        },
        "RoleARN": {
          "Ref": "AutoScalingDynamoDBRole"
        },
        "ScalableDimension": "dynamodb:index:ReadCapacityUnits",
        "ServiceNamespace": "dynamodb"
      }
    },
    "TableScalingPolicyWriteIdx0": {
      "Type": "AWS::ApplicationAutoScaling::ScalingPolicy",
      "DependsOn": [
        "AutoScalingTargetWriteIdx0",
        "TableScalingPolicyRead",
        "AutoScalingTargetRead",
        "TableScalingPolicyWrite",
        "AutoScalingTargetWrite"
      ],
      "Properties": {
        "PolicyName": "TableScalingPolicyWriteIdx0",
        "PolicyType": "TargetTrackingScaling",
        "ScalingTargetId": {
          "Ref": "AutoScalingTargetWriteIdx0"
        },
        "TargetTrackingScalingPolicyConfiguration": {
          "PredefinedMetricSpecification": {
            "PredefinedMetricType": "DynamoDBWriteCapacityUtilization"
          },
          "ScaleInCooldown": {
            "Ref": "ScaleInCooldown"
          },
          "ScaleOutCooldown": {
            "Ref": "ScaleOutCooldown"
          },
          "TargetValue": {
            "Ref": "TargetWriteUtilization"
          }
        }
      }
    },
    "AutoScalingTargetWriteIdx0": {
      "Type": "AWS::ApplicationAutoScaling::ScalableTarget",
      "DependsOn": [
        "TableScalingPolicyRead",
        "AutoScalingTargetRead",
        "TableScalingPolicyWrite",
        "AutoScalingTargetWrite"
      ],
      "Properties": {
        "MaxCapacity": {
          "Ref": "MaxWrite"
        },
        "MinCapacity": {
          "Ref": "MinWrite"
        },
        "ResourceId": {
          "Fn::Join": [
            "",
            [
              "table/",
              {
                "Ref": "Table"
              },
              "/index/",
              "idx0"
            ]
          ]
        },
        "RoleARN": {
          "Ref": "AutoScalingDynamoDBRole"
        },
        "ScalableDimension": "dynamodb:index:WriteCapacityUnits",
        "ServiceNamespace": "dynamodb"
      }
    },
    "TableScalingPolicyReadIdx1": {
      "Type": "AWS::ApplicationAutoScaling::ScalingPolicy",
      "DependsOn": [
        "AutoScalingTargetReadIdx1",
        "TableScalingPolicyReadIdx0",
        "AutoScalingTargetReadIdx0",
        "TableScalingPolicyWriteIdx0",
        "AutoScalingTargetWriteIdx0"
      ],
      "Properties": {
        "PolicyName": "TableScalingPolicyReadIdx1",
        "PolicyType": "TargetTrackingScaling",
        "ScalingTargetId": {
          "Ref": "AutoScalingTargetReadIdx1"
        },
        "TargetTrackingScalingPolicyConfiguration": {
          "PredefinedMetricSpecification": {
            "PredefinedMetricType": "DynamoDBReadCapacityUtilization"
          },
          "ScaleInCooldown": {
            "Ref": "ScaleInCooldown"
          },
          "ScaleOutCooldown": {
            "Ref": "ScaleOutCooldown"
          },
          "TargetValue": {
            "Ref": "TargetReadUtilization"
          }
        }
      }
    },
    "AutoScalingTargetReadIdx1": {
      "Type": "AWS::ApplicationAutoScaling::ScalableTarget",
      "DependsOn": [
        "TableScalingPolicyReadIdx0",
        "AutoScalingTargetReadIdx0",
        "TableScalingPolicyWriteIdx0",
        "AutoScalingTargetWriteIdx0"
      ],
      "Properties": {
        "MaxCapacity": {
          "Ref": "MaxRead"
        },
        "MinCapacity": {
          "Ref": "MinRead"
        },
        "ResourceId": {
          "Fn::Join": [
            "",
            [
              "table/",
              {
                "Ref": "Table"
              },
              "/index/",
              "idx1"
            ]
          ]
        },
        "RoleARN": {
          "Ref": "AutoScalingDynamoDBRole"
        },
        "ScalableDimension": "dynamodb:index:ReadCapacityUnits",
        "ServiceNamespace": "dynamodb"
      }
    },
    "TableScalingPolicyWriteIdx1": {
      "Type": "AWS::ApplicationAutoScaling::ScalingPolicy",
      "DependsOn": [
        "AutoScalingTargetWriteIdx1",
        "TableScalingPolicyReadIdx0",
        "AutoScalingTargetReadIdx0",
        "TableScalingPolicyWriteIdx0",
        "AutoScalingTargetWriteIdx0"
      ],
      "Properties": {
        "PolicyName": "TableScalingPolicyWriteIdx1",
        "PolicyType": "TargetTrackingScaling",
        "ScalingTargetId": {
          "Ref": "AutoScalingTargetWriteIdx1"
        },
        "TargetTrackingScalingPolicyConfiguration": {
          "PredefinedMetricSpecification": {
            "PredefinedMetricType": "DynamoDBWriteCapacityUtilization"
          },
          "ScaleInCooldown": {
            "Ref": "ScaleInCooldown"
          },
          "ScaleOutCooldown": {
            "Ref": "ScaleOutCooldown"
          },
          "TargetValue": {
            "Ref": "TargetWriteUtilization"
          }
        }
      }
    },
    "AutoScalingTargetWriteIdx1": {
      "Type": "AWS::ApplicationAutoScaling::ScalableTarget",
      "DependsOn": [
        "TableScalingPolicyReadIdx0",
        "AutoScalingTargetReadIdx0",
        "TableScalingPolicyWriteIdx0",
        "AutoScalingTargetWriteIdx0"
      ],
      "Properties": {
        "MaxCapacity": {
          "Ref": "MaxWrite"
        },
        "MinCapacity": {
          "Ref": "MinWrite"
        },
        "ResourceId": {
          "Fn::Join": [
            "",
            [
              "table/",
              {
                "Ref": "Table"
              },
              "/index/",
              "idx1"
            ]
          ]
        },
        "RoleARN": {
          "Ref": "AutoScalingDynamoDBRole"
        },
        "ScalableDimension": "dynamodb:index:WriteCapacityUnits",
        "ServiceNamespace": "dynamodb"
      }
    },
    "TableScalingPolicyReadIdx2": {
      "Type": "AWS::ApplicationAutoScaling::ScalingPolicy",
      "DependsOn": [
        "AutoScalingTargetReadIdx2",
        "TableScalingPolicyReadIdx1",
        "AutoScalingTargetReadIdx1",
        "TableScalingPolicyWriteIdx1",
        "AutoScalingTargetWriteIdx1"
      ],
      "Properties": {
        "PolicyName": "TableScalingPolicyReadIdx2",
        "PolicyType": "TargetTrackingScaling",
        "ScalingTargetId": {
          "Ref": "AutoScalingTargetReadIdx2"
        },
        "TargetTrackingScalingPolicyConfiguration": {
          "PredefinedMetricSpecification": {
            "PredefinedMetricType": "DynamoDBReadCapacityUtilization"
          },
          "ScaleInCooldown": {
            "Ref": "ScaleInCooldown"
          },
          "ScaleOutCooldown": {
            "Ref": "ScaleOutCooldown"
          },
          "TargetValue": {
            "Ref": "TargetReadUtilization"
          }
        }
      }
    },
    "AutoScalingTargetReadIdx2": {
      "Type": "AWS::ApplicationAutoScaling::ScalableTarget",
      "DependsOn": [
        "TableScalingPolicyReadIdx1",
        "AutoScalingTargetReadIdx1",
        "TableScalingPolicyWriteIdx1",
        "AutoScalingTargetWriteIdx1"
      ],
      "Properties": {
        "MaxCapacity": {
          "Ref": "MaxRead"
        },
        "MinCapacity": {
          "Ref": "MinRead"
        },
        "ResourceId": {
          "Fn::Join": [
            "",
            [
              "table/",
              {
                "Ref": "Table"
              },
              "/index/",
              "idx2"
            ]
          ]
        },
        "RoleARN": {
          "Ref": "AutoScalingDynamoDBRole"
        },
        "ScalableDimension": "dynamodb:index:ReadCapacityUnits",
        "ServiceNamespace": "dynamodb"
      }
    },
    "TableScalingPolicyWriteIdx2": {
      "Type": "AWS::ApplicationAutoScaling::ScalingPolicy",
      "DependsOn": [
        "AutoScalingTargetWriteIdx2",
        "TableScalingPolicyReadIdx1",
        "AutoScalingTargetReadIdx1",
        "TableScalingPolicyWriteIdx1",
        "AutoScalingTargetWriteIdx1"
      ],
      "Properties": {
        "PolicyName": "TableScalingPolicyWriteIdx2",
        "PolicyType": "TargetTrackingScaling",
        "ScalingTargetId": {
          "Ref": "AutoScalingTargetWriteIdx2"
        },
        "TargetTrackingScalingPolicyConfiguration": {
          "PredefinedMetricSpecification": {
            "PredefinedMetricType": "DynamoDBWriteCapacityUtilization"
          },
          "ScaleInCooldown": {
            "Ref": "ScaleInCooldown"
          },
          "ScaleOutCooldown": {
            "Ref": "ScaleOutCooldown"
          },
          "TargetValue": {
            "Ref": "TargetWriteUtilization"
          }
        }
      }
    },
    "AutoScalingTargetWriteIdx2": {
      "Type": "AWS::ApplicationAutoScaling::ScalableTarget",
      "DependsOn": [
        "TableScalingPolicyReadIdx1",
        "AutoScalingTargetReadIdx1",
        "TableScalingPolicyWriteIdx1",
        "AutoScalingTargetWriteIdx1"
      ],
      "Properties": {
        "MaxCapacity": {
          "Ref": "MaxWrite"
        },
        "MinCapacity": {
          "Ref": "MinWrite"
        },
        "ResourceId": {
          "Fn::Join": [
            "",
            [
              "table/",
              {
                "Ref": "Table"
              },
              "/index/",
              "idx2"
            ]
          ]
        },
        "RoleARN": {
          "Ref": "AutoScalingDynamoDBRole"
        },
        "ScalableDimension": "dynamodb:index:WriteCapacityUnits",
        "ServiceNamespace": "dynamodb"
      }
    },
    "TableScalingPolicyReadIdx3": {
      "Type": "AWS::ApplicationAutoScaling::ScalingPolicy",
      "DependsOn": [
        "AutoScalingTargetReadIdx3",
        "TableScalingPolicyReadIdx2",
        "AutoScalingTargetReadIdx2",
        "TableScalingPolicyWriteIdx2",
        "AutoScalingTargetWriteIdx2"
      ],
      "Properties": {
        "PolicyName": "TableScalingPolicyReadIdx3",
        "PolicyType": "TargetTrackingScaling",
        "ScalingTargetId": {
          "Ref": "AutoScalingTargetReadIdx3"
        },
        "TargetTrackingScalingPolicyConfiguration": {
          "PredefinedMetricSpecification": {
            "PredefinedMetricType": "DynamoDBReadCapacityUtilization"
          },
          "ScaleInCooldown": {
            "Ref": "ScaleInCooldown"
          },
          "ScaleOutCooldown": {
            "Ref": "ScaleOutCooldown"
          },
          "TargetValue": {
            "Ref": "TargetReadUtilization"
          }
        }
      }
    },
    "AutoScalingTargetReadIdx3": {
      "Type": "AWS::ApplicationAutoScaling::ScalableTarget",
      "DependsOn": [
        "TableScalingPolicyReadIdx2",
        "AutoScalingTargetReadIdx2",
        "TableScalingPolicyWriteIdx2",
        "AutoScalingTargetWriteIdx2"
      ],
      "Properties": {
        "MaxCapacity": {
          "Ref": "MaxRead"
        },
        "MinCapacity": {
          "Ref": "MinRead"
        },
        "ResourceId": {
          "Fn::Join": [
            "",
            [
              "table/",
              {
                "Ref": "Table"
              },
              "/index/",
              "idx3"
            ]
          ]
        },
        "RoleARN": {
          "Ref": "AutoScalingDynamoDBRole"
        },
        "ScalableDimension": "dynamodb:index:ReadCapacityUnits",
        "ServiceNamespace": "dynamodb"
      }
    },
    "TableScalingPolicyWriteIdx3": {
      "Type": "AWS::ApplicationAutoScaling::ScalingPolicy",
      "DependsOn": [
        "AutoScalingTargetWriteIdx3",
        "TableScalingPolicyReadIdx2",
        "AutoScalingTargetReadIdx2",
        "TableScalingPolicyWriteIdx2",
        "AutoScalingTargetWriteIdx2"
      ],
      "Properties": {
        "PolicyName": "TableScalingPolicyWriteIdx3",
        "PolicyType": "TargetTrackingScaling",
        "ScalingTargetId": {
          "Ref": "AutoScalingTargetWriteIdx3"
        },
        "TargetTrackingScalingPolicyConfiguration": {
          "PredefinedMetricSpecification": {
            "PredefinedMetricType": "DynamoDBWriteCapacityUtilization"
          },
          "ScaleInCooldown": {
            "Ref": "ScaleInCooldown"
          },
          "ScaleOutCooldown": {
            "Ref": "ScaleOutCooldown"
          },
          "TargetValue": {
            "Ref": "TargetWriteUtilization"
          }
        }
      }
    },
    "AutoScalingTargetWriteIdx3": {
      "Type": "AWS::ApplicationAutoScaling::ScalableTarget",
      "DependsOn": [
        "TableScalingPolicyReadIdx2",
        "AutoScalingTargetReadIdx2",
        "TableScalingPolicyWriteIdx2",
        "AutoScalingTargetWriteIdx2"
      ],
      "Properties": {
        "MaxCapacity": {
          "Ref": "MaxWrite"
        },
        "MinCapacity": {
          "Ref": "MinWrite"
        },
        "ResourceId": {
          "Fn::Join": [
            "",
            [
              "table/",
              {
                "Ref": "Table"
              },
              "/index/",
              "idx3"
            ]
          ]
        },
        "RoleARN": {
          "Ref": "AutoScalingDynamoDBRole"
        },
        "ScalableDimension": "dynamodb:index:WriteCapacityUnits",
        "ServiceNamespace": "dynamodb"
      }
    },
    "TableScalingPolicyReadIdx4": {
      "Type": "AWS::ApplicationAutoScaling::ScalingPolicy",
      "DependsOn": [
        "AutoScalingTargetReadIdx4",
        "TableScalingPolicyReadIdx3",
        "AutoScalingTargetReadIdx3",
        "TableScalingPolicyWriteIdx3",
        "AutoScalingTargetWriteIdx3"
      ],
      "Properties": {
        "PolicyName": "TableScalingPolicyReadIdx4",
        "PolicyType": "TargetTrackingScaling",
        "ScalingTargetId": {
          "Ref": "AutoScalingTargetReadIdx4"
        },
        "TargetTrackingScalingPolicyConfiguration": {
          "PredefinedMetricSpecification": {
            "PredefinedMetricType": "DynamoDBReadCapacityUtilization"
          },
          "ScaleInCooldown": {
            "Ref": "ScaleInCooldown"
          },
          "ScaleOutCooldown": {
            "Ref": "ScaleOutCooldown"
          },
          "TargetValue": {
            "Ref": "TargetReadUtilization"
          }
        }
      }
    },
    "AutoScalingTargetReadIdx4": {
      "Type": "AWS::ApplicationAutoScaling::ScalableTarget",
      "DependsOn": [
        "TableScalingPolicyReadIdx3",
        "AutoScalingTargetReadIdx3",
        "TableScalingPolicyWriteIdx3",
        "AutoScalingTargetWriteIdx3"
      ],
      "Properties": {
        "MaxCapacity": {
          "Ref": "MaxRead"
        },
        "MinCapacity": {
          "Ref": "MinRead"
        },
        "ResourceId": {
          "Fn::Join": [
            "",
            [
              "table/",
              {
                "Ref": "Table"
              },
              "/index/",
              "idx4"
            ]
          ]
        },
        "RoleARN": {
          "Ref": "AutoScalingDynamoDBRole"
        },
        "ScalableDimension": "dynamodb:index:ReadCapacityUnits",
        "ServiceNamespace": "dynamodb"
      }
    },
    "TableScalingPolicyWriteIdx4": {
      "Type": "AWS::ApplicationAutoScaling::ScalingPolicy",
      "DependsOn": [
        "AutoScalingTargetWriteIdx4",
        "TableScalingPolicyReadIdx3",
        "AutoScalingTargetReadIdx3",
        "TableScalingPolicyWriteIdx3",
        "AutoScalingTargetWriteIdx3"
      ],
      "Properties": {
        "PolicyName": "TableScalingPolicyWriteIdx4",
        "PolicyType": "TargetTrackingScaling",
        "ScalingTargetId": {
          "Ref": "AutoScalingTargetWriteIdx4"
        },
        "TargetTrackingScalingPolicyConfiguration": {
          "PredefinedMetricSpecification": {
            "PredefinedMetricType": "DynamoDBWriteCapacityUtilization"
          },
          "ScaleInCooldown": {
            "Ref": "ScaleInCooldown"
          },
          "ScaleOutCooldown": {
            "Ref": "ScaleOutCooldown"
          },
          "TargetValue": {
            "Ref": "TargetWriteUtilization"
          }
        }
      }
    },
    "AutoScalingTargetWriteIdx4": {
      "Type": "AWS::ApplicationAutoScaling::ScalableTarget",
      "DependsOn": [
        "TableScalingPolicyReadIdx3",
        "AutoScalingTargetReadIdx3",
        "TableScalingPolicyWriteIdx3",
        "AutoScalingTargetWriteIdx3"
      ],
      "Properties": {
        "MaxCapacity": {
          "Ref": "MaxWrite"
        },
        "MinCapacity": {
          "Ref": "MinWrite"
        },
        "ResourceId": {
          "Fn::Join": [
            "",
            [
              "table/",
              {
                "Ref": "Table"
              },
              "/index/",
              "idx4"
            ]
          ]
        },
        "RoleARN": {
          "Ref": "AutoScalingDynamoDBRole"
        },
        "ScalableDimension": "dynamodb:index:WriteCapacityUnits",
        "ServiceNamespace": "dynamodb"
      }
    }
  }
}