const { co, clone, timestamp } = require('../utils')
const { getUpdateParams } = require('../db-utils')
const APPEND_RETRY_ATTEMPTS = 3

module.exports = function createHistory ({ table }) {
  const append = co(function* ({ userId, item }) {
    item = clone(item)
    item.user = userId
    yield appendWithRetry(item, APPEND_RETRY_ATTEMPTS)
  })

  const dump = co(function* ({ userId /*, gt=0, lt=Infinity*/ }) {
    yield table.find(getUpdateParams(userId))
  })

  const clear = userId => table.del(getUserHistoryQuery(userId))

  const appendWithRetry = co(function* (item, attemptsLeft) {
    item.id = timestamp()
    try {
      yield table.put({
        Item: item,
        ConditionExpression: 'attribute_not_exists(user)'
      })
    } catch (err) {
      if (err.code === 'ConditionalCheckFailedException') {
        if (attemptsLeft-- > 0) {
          return appendWithRetry(item, attemptsLeft)
        }

        throw err
      }
    }
  })

  return {
    append,
    dump,
    clear
  }
}

function getUserHistoryQuery (userId) {
  return {
    ConditionExpression: 'user = :userId AND time > 0',
    ExpressionAttributeValues: {
      ':userId': userId
    }
  }
}
