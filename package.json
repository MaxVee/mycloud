{
  "name": "@tradle/serverless",
  "version": "1.3.0-trans.0",
  "main": "index.js",
  "private": "true",
  "repository": "https://github.com/tradle/serverless",
  "author": "Mark Vayngrib <mark@tradle.io>",
  "license": "MIT",
  "devDependencies": {
    "@tradle/aws-client": "^1.8.1",
    "@types/aws-sdk": "^2.7.0",
    "@types/graphql": "^0.12.3",
    "@types/json-schema": "^6.0.0",
    "@types/koa": "^2.0.44",
    "@types/lodash": "https://registry.npmjs.org/@types/lodash/-/lodash-4.14.91.tgz",
    "@types/node": "^8.0.30",
    "@types/sinon": "^4.1.2",
    "@types/superagent": "^3.5.7",
    "aws-sdk": "2.249.1",
    "aws-sdk-mock": "^1.7.0",
    "bindall": "^2.0.1",
    "copy-dynamodb-table": "^2.0.4",
    "env-file-parser": "^1.0.0",
    "eslint": "^4.19.1",
    "husky": "^0.14.3",
    "is-native-module": "^1.1.0",
    "js-yaml": "^3.10.0",
    "juice": "^4.2.2",
    "lint-staged": "^4.2.3",
    "localip": "^1.0.0",
    "minimist": "^1.2.0",
    "mkdirp": "^0.5.1",
    "nock": "^9.0.19",
    "node-env-file": "^0.1.8",
    "serverless": "github:mvayngrib/serverless",
    "serverless-dynamodb-autoscaling": "github:mvayngrib/serverless-dynamodb-autoscaling#dist",
    "serverless-dynamodb-local": "github:mvayngrib/serverless-dynamodb-local",
    "serverless-iot-local": "^2.1.0",
    "serverless-offline": "github:tradle/serverless-offline",
    "serverless-offline-scheduler": "^0.3.3",
    "serverless-plugin-aws-alerts": "^1.2.4",
    "serverless-plugin-log-retention": "^1.0.2",
    "serverless-plugin-tracing": "^1.0.6",
    "serverless-s3-local": "github:mvayngrib/serverless-s3-local",
    "sinon": "^3.3.0",
    "standard-version": "github:mvayngrib/standard-version#fixdeps",
    "tape": "^4.6.3",
    "tslint": "^5.11.0",
    "tslint-config-prettier": "^1.14.0",
    "tslint-eslint-rules": "^5.3.1",
    "typescript": "2.8.4",
    "validate-commit-msg": "^2.14.0"
  },
  "scripts": {
    "precommit": "echo 'compiling typescript' && tsc && npm run eslint && lint-staged",
    "postmerge": "./src/scripts/postmerge.sh",
    "package": "sls package",
    "gen:testenv": "node ./lib/scripts/gen-test-env.js && npm run copy-static-assets",
    "gen:fixtures": "node ./lib/scripts/gen-fixtures.js && npm run copy-static-assets",
    "gen:samples": "node ./lib/scripts/gen-samples.js",
    "gen:localsamples": "node ./lib/scripts/gen-samples.js --local",
    "gen:localresources": "./src/scripts/gen-local-resources.sh",
    "gen:localstack": "sls dynamodb migrate & sls s3 create & wait",
    "gen:resourcedefs": "node ./lib/scripts/gen-resource-defs.js",
    "gen:modelmap": "node ./lib/scripts/map-models-to-buckets.js",
    "gen:versioninfo": "./lib/scripts/gen-version-info.js > lib/version.json",
    "eslint": "eslint --quiet --ignore src/ .",
    "jslint": "npm run eslint",
    "setup:local": "./src/scripts/setup-local.sh",
    "pretest": "npm run copy-static-assets && npm run gen:localresources",
    "test": "npm run test:raw",
    "test:raw": "node lib/test && node lib/test/in-house-bot",
    "test:e2e": "BLUEBIRD_DEBUG=1 DEBUG=λ*,*tradle* node lib/scripts/end-to-end-test.js",
    "test:e2e:debug": "BLUEBIRD_DEBUG=1 DEBUG=λ*,*tradle* node --debug --inspect lib/scripts/end-to-end-test.js",
    "test:graphqlserver": "NODE_ENV=test node ./lib/scripts/graphql-server",
    "test:graphqlserver:debug": "NODE_ENV=test node --debug --inspect ./lib/scripts/graphql-server",
    "graphqlserver": "node ./lib/scripts/graphql-server",
    "graphqlserver:debug": "node --debug --inspect ./lib/scripts/graphql-server",
    "deploy:prepare": "./src/scripts/deploy-prepare.sh",
    "deploy:base": "./src/scripts/deploy-base.sh",
    "deploy": "npm run deploy:prepare && npm run deploy:base",
    "deploy:safe": "npm run deploy:prepare && npm run gen:localresources && npm run test:raw && npm run rebuild:lambda && npm run deploy:base",
    "deploy:fromscratch": "npm run reinstall && npm run localstack:start && npm run deploy:safe",
    "deploy:postprocess": "./src/scripts/postdeploy.sh",
    "rebuild:lambda": "./src/scripts/rebuild-lambda.sh",
    "rebuild:local": "npm rebuild",
    "rebuild:lib": "npm run clean:lib && npm run build:lib",
    "rebuildanddeploy": "npm run rebuild:lambda && npm run deploy",
    "nuke": "./src/scripts/nuke.sh",
    "nuke:local": "sls s3 remove & sls dynamodb remove & wait",
    "reset:local": "./src/scripts/reset-local.sh",
    "clean:lib": "rm -rf lib/ && mkdir -p lib",
    "clean:node_modules": "./src/scripts/clean_node_modules.sh",
    "clear:tables": "DEBUG=* node ./lib/scripts/clear-tables.js",
    "copy-static-assets": "./src/scripts/copy-static-assets.sh",
    "export:template": "serverless sam export --output ./template.yml",
    "makepublic": "node ./lib/scripts/makepublic.js",
    "compile-template": "npm run gen:versioninfo && rm -f serverless.yml && node ./lib/scripts/compile.js -i serverless-uncompiled.yml -o serverless.yml && cp serverless.yml serverless-compiled.yml",
    "interpolate-template": "./src/scripts/interpolate-template.sh",
    "build:yml": "npm run compile-template && npm run interpolate-template && npm run gen:resourcedefs && npm run copy-static-assets",
    "build:lib": "mkdir -p lib/ && tsc && npm run copy-static-assets && npm run gen:versioninfo && npm run gen:resourcedefs",
    "build": "npm run build:lib && npm run build:yml",
    "reinstall": "rm -rf node_modules && npm install",
    "localstack:start": "./src/scripts/localstack.sh up -d",
    "localstack:stop": "./src/scripts/localstack.sh down",
    "localstack:restart": "./src/scripts/localstack.sh down && ./src/scripts/localstack.sh up -d",
    "localstack:update": "npm run update:images",
    "update:models": "node ./lib/scripts/update-models.js",
    "update:images": "cd docker && docker-compose -f ./docker-compose-localstack.yml pull",
    "tail": "./src/scripts/tail.sh",
    "info": "serverless info",
    "tswatch": "tsc -w",
    "tslint": "tslint -p .",
    "invoke:http": "./src/scripts/invoke-unzip.sh",
    "delete:applications": "node ./lib/scripts/delete-applications.js",
    "getmyinfo": "node ./lib/scripts/info.js > myinfo.json && open ./myinfo.json",
    "setenv": "npm run build:yml && node ./lib/scripts/setenv.js",
    "addfriends": "npm run copy-static-assets && node ./lib/scripts/addfriends.js",
    "reshrink": "npm dedupe && npm prune && npm shrinkwrap --dev",
    "start": "./src/scripts/start.sh",
    "debug": "node --inspect ./node_modules/.bin/sls offline start",
    "debug-brk": "node --inspect-brk ./node_modules/.bin/sls offline start",
    "warmup": "sls warmup run",
    "postinstall": "./src/scripts/postinstall.sh",
    "remove": "npm run build:yml && sls remove",
    "stacksize": "./src/scripts/count-resources.sh",
    "scan": "./src/scripts/scan.sh $@",
    "templates:prerender": "node ./lib/scripts/prerender-templates.js && npm run copy-static-assets",
    "fix:redis": "echo restarting redis, it\\'s been naughty && cd docker && docker-compose -f ./docker-compose-localstack.yml restart redis",
    "clean:deps": "echo 'removing unused optional deps of serverless-iot-local and nunjucks' && npm uninstall -S zmq ampqlib amqp kafka-node mongodb qlobber-fsq kerberos chokidar fsevents",
    "release": "standard-version",
    "release:patch": "standard-version --release-as patch",
    "release:minor": "standard-version --release-as minor",
    "release:major": "standard-version --release-as major",
    "releasecandidate": "standard-version --prerelease rc --no-verify",
    "releasecandidate:patch": "npm run releasecandidate -- --patch",
    "releasecandidate:minor": "npm run releasecandidate -- --minor",
    "releasecandidate:major": "npm run releasecandidate -- --major",
    "releasetransition": "standard-version --prerelease trans --no-verify --release-as patch"
  },
  "dependencies": {
    "@aws/dynamodb-expressions": "^0.4.0",
    "@meltwater/fetch-favicon": "^1.0.4",
    "@tradle/bitcoin-adapter": "github:tradle/bitcoin-adapter",
    "@tradle/biz-plugins": "github:tradle/biz-plugins",
    "@tradle/bot-employee-manager": "github:tradle/bot-employee-manager",
    "@tradle/bot-products": "github:tradle/bot-products",
    "@tradle/build-resource": "^4.0.2",
    "@tradle/cb-blockr": "^3.2.1",
    "@tradle/constants": "^2.4.0",
    "@tradle/custom-models": "github:tradle/custom-models",
    "@tradle/dynamodb": "github:tradle/dynamodb",
    "@tradle/embed": "^1.1.2",
    "@tradle/engine": "^7.0.1",
    "@tradle/ethereum-adapter": "github:tradle/ethereum-adapter",
    "@tradle/gen-samples": "github:tradle/gen-samples",
    "@tradle/iot-message": "^3.0.0",
    "@tradle/lens": "^1.3.0",
    "@tradle/merge-models": "^2.1.0",
    "@tradle/models": "github:tradle/models",
    "@tradle/models-cloud": "github:tradle/models-cloud",
    "@tradle/models-corporate-onboarding": "github:tradle/models-corporate-onboarding",
    "@tradle/models-nz": "github:tradle/models-nz",
    "@tradle/models-onfido": "github:tradle/models-onfido",
    "@tradle/models-pack": "^1.3.0",
    "@tradle/models-products-bot": "github:tradle/models-products-bot",
    "@tradle/onfido-api": "github:tradle/onfido-api",
    "@tradle/plugin-customize-message": "github:tradle/plugin-customize-message",
    "@tradle/plugin-onfido": "github:tradle/plugin-onfido",
    "@tradle/protocol": "^4.1.0",
    "@tradle/qr": "^2.0.0",
    "@tradle/qr-schema": "^1.9.0",
    "@tradle/schema-graphql": "github:tradle/schema-graphql",
    "@tradle/schema-joi": "github:tradle/schema-joi",
    "@tradle/test-helpers": "github:tradle/test-helpers",
    "@tradle/validate-model": "^7.1.0",
    "@tradle/validate-resource": "^4.3.0",
    "aws-xray-sdk-core": "^1.2.0",
    "bluebird": "^3.5.0",
    "bn.js": "^4.11.8",
    "caseless": "^0.12.0",
    "clone": "^2.1.1",
    "co": "^4.6.0",
    "data-uri-to-file": "^0.1.8",
    "datauri": "^1.0.5",
    "debug": "^2.6.9",
    "deep-equal": "^1.0.1",
    "deep-extend": "^0.5.0",
    "dynamodb-marshaler": "^2.0.0",
    "error-ex": "^1.3.1",
    "event-hooks": "^1.2.0",
    "freemail": "github:tradle/freemail",
    "graphql": "^0.10.5",
    "ip": "~1.1.5",
    "is-generator-function": "^1.0.6",
    "js-yaml": "^3.10.0",
    "json-stable-stringify": "^1.0.1",
    "json-stringify-safe": "^5.0.1",
    "just-diff": "^2.1.1",
    "kcors": "^2.2.1",
    "key-encoder": "mvayngrib/key-encoder-js",
    "koa": "^2.0.0-alpha.8",
    "koa-body": "^2.5.0",
    "koa-compose": "^3.2.1",
    "koa-compress": "^2.0.0",
    "koa-graphql": "github:mvayngrib/koa-graphql#7609b5d",
    "koa-router": "^7.3.0",
    "lexicographic-integer": "https://registry.npmjs.org/lexicographic-integer/-/lexicographic-integer-1.1.0.tgz",
    "lodash": "^4.17.4",
    "lru-cache": "^4.1.1",
    "mem": "^3.0.0",
    "merge-sorted": "^1.0.0",
    "microtime-nodejs": "^1.0.0",
    "mkdirp": "^0.5.1",
    "mockery": "^2.1.0",
    "nkey-bitcoin": "^1.2.0",
    "nkey-curve25519": "^1.0.1",
    "nkey-ecdsa": "^1.1.0",
    "nkey-ethereum": "github:tradle/nkey-ethereum",
    "node-fetch": "^1.7.3",
    "nodecredstash": "github:tradle/credstash",
    "nunjucks": "^3.1.2",
    "pify": "^2.3.0",
    "promise-locker": "^1.0.0",
    "random-name": "^0.1.2",
    "serverless-http": "github:mvayngrib/serverless-http",
    "source-map-support": "^0.4.18",
    "string-format": "^0.5.0",
    "superagent": "^3.5.2",
    "time-require": "^0.1.2",
    "tslib": "^1.9.0",
    "typeforce": "^1.11.1",
    "uuid": "^3.1.0",
    "xml2js": "^0.4.19",
    "xtend": "^4.0.1",
    "yargs-parser": "~2.4.1",
    "yn": "^2.0.0"
  },
  "optionalDependencies": {
    "@tradle/centrix": "github:tradle/centrix"
  },
  "lint-staged": {
    "README.md": [
      "doctoc",
      "git add"
    ]
  },
  "standard-version": {}
}
